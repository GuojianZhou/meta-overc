#/bin/bash

# we ge an action + cube name or action + json
action=$1
shift

# if we have json, there will be { in the next input, otherwise, it
# is a directory
echo "$@" | grep -q {
if [ $? -eq 0 ]; then
    # json
    cubedir=$(pwd)
    cubename=$(basename $cubedir)

    # yank what we need out of the json
    pid=$(echo "$@" | jq .pid)
    veth_essential_name=$(eval echo veth${pid})
    # oci containers always get veth-br-int as their internal veth pair name
    veth_name="veth-br-int"
else
    # directory
    cubedir=$1
    cubename=$(basename $cubedir)
    count=0
    while [ $count -lt 10 ]; do
	pid=$(machinectl show ${cubename} | grep Leader | cut -f2 -d=)
	if [ -z "${pid}" ]; then
	    echo "failed to get pid $count" >> /tmp/cube-hook.log
	    let count=$count+1
	    sleep 0.5
	else
	    echo "got pid $pid on try $count" >> /tmp/cube-hook.log
	    count=10
	fi
    done
    veth_name=$(eval echo veth-${cubename})
fi

cd $cubedir

if [ "${action}" = "netprime" ]; then
    echo "netprime set up"

    # TODO: grep for the lines in the dnsmasq.conf and don't add them if they are there!
    nsenter -t ${pid} -m grep -q ${veth_name} /etc/dnsmasq.conf
    if [ $? -ne 0 ]; then
	# dnsmasq setup
	nsenter -t ${pid} -m -n -u -i -p -C --preserve-credentials sh -c "echo \"interface=${veth_name}\" >> /etc/dnsmasq.conf"
	nsenter -t ${pid} -m -n -u -i -p -C --preserve-credentials sh -c 'echo "dhcp-range=192.168.42.100,192.168.42.200,2h" >> /etc/dnsmasq.conf'
	nsenter -t ${pid} -m -n -u -i -p -C --preserve-credentials sh -c 'echo "dhcp-option=option:router,192.168.42.1" >> /etc/dnsmasq.conf'
	nsenter -t ${pid} -m -n -u -i -p -C --preserve-credentials systemctl restart dnsmasq
	if [ $? -ne 0 ]; then
	    exit 0
	fi
    fi

    netdevs=$(cat .cube.device.network)
    for n in ${netdevs}; do
	echo ${n} | grep -q veth
	if [ $? -ne 0 ]; then
	    # we have a real device
	    device=$(echo ${n} | cut -f1 -d:)

	    # forwarding (for other containers to the external network)
	    nsenter -t ${pid} -n --preserve-credentials iptables -t nat -A POSTROUTING -o ${device} -j MASQUERADE
	    nsenter -t ${pid} -m -n -u -i -p -C --preserve-credentials sh -c 'echo 1 > /proc/sys/net/ipv4/ip_forward'

	    # etcd -> forward to dom0 (incoming)
	    nsenter -t ${pid} -n --preserve-credentials iptables -A PREROUTING -t nat -i ${device} -p tcp --dport 2379 -j DNAT --to 192.168.42.3:2379
	    nsenter -t ${pid} -n --preserve-credentials iptables -A FORWARD -p tcp -d 192.168.42.3 --dport 2379 -j ACCEPT
	fi
    done
fi
